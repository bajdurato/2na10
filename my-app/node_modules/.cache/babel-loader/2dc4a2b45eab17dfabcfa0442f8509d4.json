{"ast":null,"code":"import _objectSpread from \"D:\\\\Programowanie\\\\CodersCamp\\\\dwana10\\\\2na10\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Programowanie\\\\CodersCamp\\\\dwana10\\\\2na10\\\\my-app\\\\src\\\\modules\\\\movie-browser\\\\movie-browser.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { AppBar, TextField, RaisedButton, Toolbar } from 'material-ui';\nimport * as movieActions from './movie-browser.actions';\nimport * as movieHelpers from './movie-browser.helpers';\nimport MovieList from './movie-list/movie-list.component';\nimport * as scrollHelpers from '../common/scroll.helpers';\nimport MovieModal from './movie-modal/movie-modal.container';\nimport Popup from 'reactjs-popup';\n\nclass MovieBrowser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      currentMovies: []\n    }; // Binds the handleScroll to this class (MovieBrowser)\n    // which provides access to MovieBrowser's props\n    // Note: You don't have to do this if you call a method\n    // directly from a lifecycle method\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.onscroll = this.handleScroll;\n    this.props.getTopMovies(this.state.currentPage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const topMovies = this.props.topMovies;\n\n    if (!topMovies.isLoading) {\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\n\n      if (percentageScrolled > .8) {\n        const nextPage = this.state.currentPage + 1;\n        this.props.getTopMovies(nextPage);\n        this.setState({\n          currentPage: nextPage\n        });\n      }\n    }\n  }\n\n  render() {\n    const topMovies = this.props.topMovies;\n    const movies = movieHelpers.getMoviesList(topMovies.response);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      title: \"Movie Browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Login \"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))), React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" Registration \"),\n      modal: true,\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"register-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      class: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"e-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))))))), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Search will go here\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MovieList, {\n      movies: movies,\n      isLoading: topMovies.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(MovieModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect( // Map nodes in our state to a properties of our component\nstate => ({\n  topMovies: state.movieBrowser.topMovies\n}), // Map action creators to properties of our component\n_objectSpread({}, movieActions))(MovieBrowser);","map":{"version":3,"sources":["D:\\Programowanie\\CodersCamp\\dwana10\\2na10\\my-app\\src\\modules\\movie-browser\\movie-browser.container.js"],"names":["React","connect","Grid","Row","Col","AppBar","TextField","RaisedButton","Toolbar","movieActions","movieHelpers","MovieList","scrollHelpers","MovieModal","Popup","MovieBrowser","Component","constructor","props","state","currentPage","currentMovies","handleScroll","bind","componentDidMount","window","onscroll","getTopMovies","componentWillUnmount","removeEventListener","topMovies","isLoading","percentageScrolled","getPercentageScrolledDown","nextPage","setState","render","movies","getMoviesList","response","movieBrowser"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid, Row, Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton, Toolbar} from 'material-ui';\r\nimport * as movieActions from './movie-browser.actions';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieModal from './movie-modal/movie-modal.container';\r\n\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\nclass MovieBrowser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      currentMovies: []\r\n    };\r\n    // Binds the handleScroll to this class (MovieBrowser)\r\n    // which provides access to MovieBrowser's props\r\n    // Note: You don't have to do this if you call a method\r\n    // directly from a lifecycle method\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onscroll = this.handleScroll;\r\n    this.props.getTopMovies(this.state.currentPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    const {topMovies} = this.props;\r\n    if (!topMovies.isLoading) {\r\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\r\n      if (percentageScrolled > .8) {\r\n        const nextPage = this.state.currentPage + 1;\r\n        this.props.getTopMovies(nextPage);\r\n        this.setState({currentPage: nextPage});\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {topMovies} = this.props;\r\n    const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n    return (\r\n      <div>\r\n        <AppBar title='Movie Browser'>\r\n          <Toolbar>\r\n            <Popup trigger = {\r\n                <button className = \"button\" > Login </button>}\r\n                  modal\r\n                  closeOnDocumentClick >\r\n                <div class = \"login-page\" >\r\n                  <div class = \"form\" >\r\n                    <form class = \"login-form\" >\r\n                      <input type = \"text\" placeholder = \"username\" />\r\n                      <input type = \"password\" placeholder = \"password\" />\r\n                      <input type = \"submit\" value=\"login\"/>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </Popup>\r\n            <Popup trigger = {\r\n                <button className = \"button\" > Registration </button>}\r\n                  modal\r\n                  closeOnDocumentClick >\r\n                <div class = \"register-page\" >\r\n                  <div class = \"form\" >\r\n                    <form class = \"register-form\" >\r\n                      <input type = \"email\" placeholder= \"e-mail\"/>\r\n                      <input type = \"text\" placeholder = \"username\" />\r\n                      <input type = \"password\" placeholder = \"password\" />\r\n                      <input type = \"submit\" value=\"create\"/>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </Popup>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Grid>\r\n          <Row>\r\n            <p>Search will go here</p>\r\n          </Row>\r\n          <Row>\r\n            <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n          </Row>\r\n        </Grid>\r\n        <MovieModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  (state) => ({\r\n    topMovies: state.movieBrowser.topMovies\r\n  }),\r\n  // Map action creators to properties of our component\r\n  { ...movieActions }\r\n)(MovieBrowser);"]},"metadata":{},"sourceType":"module"}
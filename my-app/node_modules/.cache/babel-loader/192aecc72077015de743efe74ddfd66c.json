{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TextField = require('../TextField');\n\nvar _TextField2 = _interopRequireDefault(_TextField);\n\nvar _DropDownMenu = require('../DropDownMenu');\n\nvar _DropDownMenu2 = _interopRequireDefault(_DropDownMenu);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props) {\n  return {\n    label: {\n      paddingLeft: 0,\n      top: props.floatingLabelText ? 6 : -4\n    },\n    icon: {\n      right: 0,\n      top: props.floatingLabelText ? 8 : 0\n    },\n    hideDropDownUnderline: {\n      borderTop: 'none'\n    },\n    dropDownMenu: {\n      display: 'block'\n    }\n  };\n}\n\nvar SelectField = function (_Component) {\n  (0, _inherits3.default)(SelectField, _Component);\n\n  function SelectField() {\n    (0, _classCallCheck3.default)(this, SelectField);\n    return (0, _possibleConstructorReturn3.default)(this, (SelectField.__proto__ || (0, _getPrototypeOf2.default)(SelectField)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(SelectField, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          autoWidth = _props.autoWidth,\n          multiple = _props.multiple,\n          children = _props.children,\n          style = _props.style,\n          labelStyle = _props.labelStyle,\n          iconStyle = _props.iconStyle,\n          id = _props.id,\n          underlineDisabledStyle = _props.underlineDisabledStyle,\n          underlineFocusStyle = _props.underlineFocusStyle,\n          menuItemStyle = _props.menuItemStyle,\n          selectedMenuItemStyle = _props.selectedMenuItemStyle,\n          underlineStyle = _props.underlineStyle,\n          dropDownMenuProps = _props.dropDownMenuProps,\n          errorStyle = _props.errorStyle,\n          disabled = _props.disabled,\n          floatingLabelFixed = _props.floatingLabelFixed,\n          floatingLabelText = _props.floatingLabelText,\n          floatingLabelStyle = _props.floatingLabelStyle,\n          hintStyle = _props.hintStyle,\n          hintText = _props.hintText,\n          fullWidth = _props.fullWidth,\n          errorText = _props.errorText,\n          listStyle = _props.listStyle,\n          maxHeight = _props.maxHeight,\n          menuStyle = _props.menuStyle,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          onChange = _props.onChange,\n          selectionRenderer = _props.selectionRenderer,\n          value = _props.value,\n          other = (0, _objectWithoutProperties3.default)(_props, ['autoWidth', 'multiple', 'children', 'style', 'labelStyle', 'iconStyle', 'id', 'underlineDisabledStyle', 'underlineFocusStyle', 'menuItemStyle', 'selectedMenuItemStyle', 'underlineStyle', 'dropDownMenuProps', 'errorStyle', 'disabled', 'floatingLabelFixed', 'floatingLabelText', 'floatingLabelStyle', 'hintStyle', 'hintText', 'fullWidth', 'errorText', 'listStyle', 'maxHeight', 'menuStyle', 'onFocus', 'onBlur', 'onChange', 'selectionRenderer', 'value']);\n      var styles = getStyles(this.props, this.context);\n      return _react2.default.createElement(_TextField2.default, (0, _extends3.default)({}, other, {\n        style: style,\n        disabled: disabled,\n        floatingLabelFixed: floatingLabelFixed,\n        floatingLabelText: floatingLabelText,\n        floatingLabelStyle: floatingLabelStyle,\n        hintStyle: hintStyle,\n        hintText: !hintText && !floatingLabelText ? ' ' : hintText,\n        fullWidth: fullWidth,\n        errorText: errorText,\n        underlineStyle: underlineStyle,\n        errorStyle: errorStyle,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        id: id,\n        underlineDisabledStyle: underlineDisabledStyle,\n        underlineFocusStyle: underlineFocusStyle\n      }), _react2.default.createElement(_DropDownMenu2.default, (0, _extends3.default)({\n        disabled: disabled,\n        style: (0, _simpleAssign2.default)(styles.dropDownMenu, menuStyle),\n        labelStyle: (0, _simpleAssign2.default)(styles.label, labelStyle),\n        iconStyle: (0, _simpleAssign2.default)(styles.icon, iconStyle),\n        menuItemStyle: menuItemStyle,\n        selectedMenuItemStyle: selectedMenuItemStyle,\n        underlineStyle: styles.hideDropDownUnderline,\n        listStyle: listStyle,\n        autoWidth: autoWidth,\n        value: value,\n        onChange: onChange,\n        maxHeight: maxHeight,\n        multiple: multiple,\n        selectionRenderer: selectionRenderer\n      }, dropDownMenuProps), children));\n    }\n  }]);\n  return SelectField;\n}(_react.Component);\n\nSelectField.defaultProps = {\n  autoWidth: false,\n  disabled: false,\n  fullWidth: false,\n  multiple: false\n};\nSelectField.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nSelectField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\r\n   * If true, the width will automatically be set according to the\r\n   * items inside the menu.\r\n   * To control the width in CSS instead, leave this prop set to `false`.\r\n   */\n  autoWidth: _propTypes2.default.bool,\n\n  /**\r\n   * The `MenuItem` elements to populate the select field with.\r\n   * If the menu items have a `label` prop, that value will\r\n   * represent the selected menu item in the rendered select field.\r\n   */\n  children: _propTypes2.default.node,\n\n  /**\r\n   * If true, the select field will be disabled.\r\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\r\n   * Object that can handle and override any property of component DropDownMenu.\r\n   */\n  dropDownMenuProps: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the error element.\r\n   */\n  errorStyle: _propTypes2.default.object,\n\n  /**\r\n   * The error content to display.\r\n   */\n  errorText: _propTypes2.default.node,\n\n  /**\r\n   * If true, the floating label will float even when no value is selected.\r\n   */\n  floatingLabelFixed: _propTypes2.default.bool,\n\n  /**\r\n   * Override the inline-styles of the floating label.\r\n   */\n  floatingLabelStyle: _propTypes2.default.object,\n\n  /**\r\n   * The content of the floating label.\r\n   */\n  floatingLabelText: _propTypes2.default.node,\n\n  /**\r\n   * If true, the select field will take up the full width of its container.\r\n   */\n  fullWidth: _propTypes2.default.bool,\n\n  /**\r\n   * Override the inline-styles of the hint element.\r\n   */\n  hintStyle: _propTypes2.default.object,\n\n  /**\r\n   * The hint content to display.\r\n   */\n  hintText: _propTypes2.default.node,\n\n  /**\r\n   * Override the inline-styles of the icon element.\r\n   */\n  iconStyle: _propTypes2.default.object,\n\n  /**\r\n   * The id prop for the text field.\r\n   */\n  id: _propTypes2.default.string,\n\n  /**\r\n   * Override the label style when the select field is inactive.\r\n   */\n  labelStyle: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the underlying `List` element.\r\n   */\n  listStyle: _propTypes2.default.object,\n\n  /**\r\n   * Override the default max-height of the underlying `DropDownMenu` element.\r\n   */\n  maxHeight: _propTypes2.default.number,\n\n  /**\r\n   * Override the inline-styles of menu items.\r\n   */\n  menuItemStyle: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the underlying `DropDownMenu` element.\r\n   */\n  menuStyle: _propTypes2.default.object,\n\n  /**\r\n   * If true, `value` must be an array and the menu will support\r\n   * multiple selections.\r\n   */\n  multiple: _propTypes2.default.bool,\n\n  /** @ignore */\n  onBlur: _propTypes2.default.func,\n\n  /**\r\n   * Callback function fired when a menu item is selected.\r\n   *\r\n   * @param {object} event Click event targeting the menu item\r\n   * that was selected.\r\n   * @param {number} key The index of the selected menu item, or undefined\r\n   * if `multiple` is true.\r\n   * @param {any} payload If `multiple` is true, the menu's `value`\r\n   * array with either the menu item's `value` added (if\r\n   * it wasn't already selected) or omitted (if it was already selected).\r\n   * Otherwise, the `value` of the menu item.\r\n   */\n  onChange: _propTypes2.default.func,\n\n  /** @ignore */\n  onFocus: _propTypes2.default.func,\n\n  /**\r\n   * Override the inline-styles of selected menu items.\r\n   */\n  selectedMenuItemStyle: _propTypes2.default.object,\n\n  /**\r\n   * Customize the rendering of the selected item.\r\n   *\r\n   * @param {any} value If `multiple` is true, the menu's `value`\r\n   * array with either the menu item's `value` added (if\r\n   * it wasn't already selected) or omitted (if it was already selected).\r\n   * Otherwise, the `value` of the menu item.\r\n   * @param {any} menuItem The selected `MenuItem`.\r\n   * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.\r\n   */\n  selectionRenderer: _propTypes2.default.func,\n\n  /**\r\n   * Override the inline-styles of the root element.\r\n   */\n  style: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the underline element when the select\r\n   * field is disabled.\r\n   */\n  underlineDisabledStyle: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the underline element when the select field\r\n   * is focused.\r\n   */\n  underlineFocusStyle: _propTypes2.default.object,\n\n  /**\r\n   * Override the inline-styles of the underline element.\r\n   */\n  underlineStyle: _propTypes2.default.object,\n\n  /**\r\n   * If `multiple` is true, an array of the `value`s of the selected\r\n   * menu items. Otherwise, the `value` of the selected menu item.\r\n   * If provided, the menu will be a controlled component.\r\n   */\n  value: _propTypes2.default.any\n} : {};\nexports.default = SelectField;","map":null,"metadata":{},"sourceType":"script"}
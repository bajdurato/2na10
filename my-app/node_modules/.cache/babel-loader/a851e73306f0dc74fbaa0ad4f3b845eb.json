{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props, context) {\n  var _titleBar;\n\n  var _context$muiTheme = context.muiTheme,\n      baseTheme = _context$muiTheme.baseTheme,\n      gridTile = _context$muiTheme.gridTile;\n  var actionPos = props.actionIcon && props.actionPosition;\n  var styles = {\n    root: {\n      position: 'relative',\n      display: 'block',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    titleBar: (_titleBar = {\n      position: 'absolute',\n      left: 0,\n      right: 0\n    }, (0, _defineProperty3.default)(_titleBar, props.titlePosition, 0), (0, _defineProperty3.default)(_titleBar, 'height', props.subtitle ? 68 : 48), (0, _defineProperty3.default)(_titleBar, 'background', props.titleBackground), (0, _defineProperty3.default)(_titleBar, 'display', 'flex'), (0, _defineProperty3.default)(_titleBar, 'alignItems', 'center'), _titleBar),\n    titleWrap: {\n      flexGrow: 1,\n      marginLeft: actionPos !== 'left' ? baseTheme.spacing.desktopGutterLess : 0,\n      marginRight: actionPos === 'left' ? baseTheme.spacing.desktopGutterLess : 0,\n      color: gridTile.textColor,\n      overflow: 'hidden'\n    },\n    title: {\n      fontSize: '16px',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    subtitle: {\n      fontSize: '12px',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    actionIcon: {\n      order: actionPos === 'left' ? -1 : 1\n    },\n    childImg: {\n      height: '100%',\n      transform: 'translateX(-50%)',\n      position: 'relative',\n      left: '50%'\n    }\n  };\n  return styles;\n}\n\nvar GridTile = function (_Component) {\n  (0, _inherits3.default)(GridTile, _Component);\n\n  function GridTile() {\n    (0, _classCallCheck3.default)(this, GridTile);\n    return (0, _possibleConstructorReturn3.default)(this, (GridTile.__proto__ || (0, _getPrototypeOf2.default)(GridTile)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(GridTile, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.ensureImageCover();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.ensureImageCover();\n    }\n  }, {\n    key: 'ensureImageCover',\n    value: function ensureImageCover() {\n      var _this2 = this;\n\n      var imgEl = this.refs.img;\n\n      if (imgEl) {\n        var fit = function fit() {\n          if (imgEl.offsetWidth < imgEl.parentNode.offsetWidth) {\n            var isRtl = _this2.context.muiTheme.isRtl;\n            imgEl.style.height = 'auto';\n\n            if (isRtl) {\n              imgEl.style.right = '0';\n            } else {\n              imgEl.style.left = '0';\n            }\n\n            imgEl.style.width = '100%';\n            imgEl.style.top = '50%';\n            imgEl.style.transform = imgEl.style.WebkitTransform = 'translateY(-50%)';\n          }\n\n          imgEl.removeEventListener('load', fit);\n          imgEl = null; // prevent closure memory leak\n        };\n\n        if (imgEl.complete) {\n          fit();\n        } else {\n          imgEl.addEventListener('load', fit);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          title = _props.title,\n          subtitle = _props.subtitle,\n          titlePosition = _props.titlePosition,\n          titleBackground = _props.titleBackground,\n          titleStyle = _props.titleStyle,\n          subtitleStyle = _props.subtitleStyle,\n          actionIcon = _props.actionIcon,\n          actionPosition = _props.actionPosition,\n          style = _props.style,\n          children = _props.children,\n          containerElement = _props.containerElement,\n          other = (0, _objectWithoutProperties3.default)(_props, ['title', 'subtitle', 'titlePosition', 'titleBackground', 'titleStyle', 'subtitleStyle', 'actionIcon', 'actionPosition', 'style', 'children', 'containerElement']);\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      var styles = getStyles(this.props, this.context);\n      var mergedRootStyles = (0, _simpleAssign2.default)(styles.root, style);\n      var titleBar = null;\n\n      if (title) {\n        titleBar = _react2.default.createElement('div', {\n          key: 'titlebar',\n          style: prepareStyles(styles.titleBar)\n        }, _react2.default.createElement('div', {\n          style: prepareStyles(styles.titleWrap)\n        }, _react2.default.createElement('div', {\n          style: prepareStyles((0, _simpleAssign2.default)(styles.title, titleStyle))\n        }, title), subtitle ? _react2.default.createElement('div', {\n          style: prepareStyles((0, _simpleAssign2.default)(styles.subtitle, subtitleStyle))\n        }, subtitle) : null), actionIcon ? _react2.default.createElement('div', {\n          style: prepareStyles(styles.actionIcon)\n        }, actionIcon) : null);\n      }\n\n      var newChildren = children; // if there is a single image passed as children\n      // clone it and add our styles\n\n      if (_react2.default.Children.count(children) === 1) {\n        newChildren = _react2.default.Children.map(children, function (child) {\n          if (child.type === 'img') {\n            return _react2.default.cloneElement(child, {\n              key: 'img',\n              ref: 'img',\n              style: prepareStyles((0, _simpleAssign2.default)({}, styles.childImg, child.props.style))\n            });\n          } else {\n            return child;\n          }\n        });\n      }\n\n      var containerProps = (0, _extends3.default)({\n        style: prepareStyles(mergedRootStyles)\n      }, other);\n      return _react2.default.isValidElement(containerElement) ? _react2.default.cloneElement(containerElement, containerProps, [newChildren, titleBar]) : _react2.default.createElement(containerElement, containerProps, [newChildren, titleBar]);\n    }\n  }]);\n  return GridTile;\n}(_react.Component);\n\nGridTile.defaultProps = {\n  titlePosition: 'bottom',\n  titleBackground: 'rgba(0, 0, 0, 0.4)',\n  actionPosition: 'right',\n  cols: 1,\n  rows: 1,\n  containerElement: 'div'\n};\nGridTile.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nGridTile.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\r\n   * An IconButton element to be used as secondary action target\r\n   * (primary action target is the tile itself).\r\n   */\n  actionIcon: _propTypes2.default.element,\n\n  /**\r\n   * Position of secondary action IconButton.\r\n   */\n  actionPosition: _propTypes2.default.oneOf(['left', 'right']),\n\n  /**\r\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\r\n   * in whichcase GridTile takes care of making the image \"cover\" available space\r\n   * (similar to background-size: cover or to object-fit:cover).\r\n   */\n  children: _propTypes2.default.node,\n\n  /**\r\n   * Width of the tile in number of grid cells.\r\n   */\n  cols: _propTypes2.default.number,\n\n  /**\r\n   * Either a string used as tag name for the tile root element, or a ReactElement.\r\n   * This is useful when you have, for example, a custom implementation of\r\n   * a navigation link (that knows about your routes) and you want to use it as the primary tile action.\r\n   * In case you pass a ReactElement, please ensure that it passes all props,\r\n   * accepts styles overrides and render it's children.\r\n   */\n  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),\n\n  /**\r\n   * Height of the tile in number of grid cells.\r\n   */\n  rows: _propTypes2.default.number,\n\n  /**\r\n   * Override the inline-styles of the root element.\r\n   */\n  style: _propTypes2.default.object,\n\n  /**\r\n   * String or element serving as subtitle (support text).\r\n   */\n  subtitle: _propTypes2.default.node,\n\n  /**\r\n   * Override the inline-styles of the subtitle element.\r\n   */\n  subtitleStyle: _propTypes2.default.object,\n\n  /**\r\n   * Title to be displayed on tile.\r\n   */\n  title: _propTypes2.default.node,\n\n  /**\r\n   * Style used for title bar background.\r\n   * Useful for setting custom gradients for example\r\n   */\n  titleBackground: _propTypes2.default.string,\n\n  /**\r\n   * Position of the title bar (container of title, subtitle and action icon).\r\n   */\n  titlePosition: _propTypes2.default.oneOf(['top', 'bottom']),\n\n  /**\r\n   * Override the inline-styles of the title element.\r\n   */\n  titleStyle: _propTypes2.default.object\n} : {};\nexports.default = GridTile;","map":null,"metadata":{},"sourceType":"script"}
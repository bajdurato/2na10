{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Programowanie\\\\CodersCamp\\\\dwana10\\\\2na10\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\Programowanie\\\\CodersCamp\\\\dwana10\\\\2na10\\\\my-app\\\\src\\\\modules\\\\panels\\\\registration.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmutation($username: String!, $email: String!, $password: String!, $isAdmin: Boolean) {\\n\\tregister(username: $username, email: $email, password: $password, isAdmin: $isAdmin) {\\n\\t  id\\n\\t}\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Button, Input, Checkbox } from 'antd';\nimport { gql, graphql } from 'react-apollo';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      isAdmin: false\n    };\n\n    this.onChange = e => {\n      if (e.target.name === 'isAdmin') {\n        this.setState({\n          [e.target.name]: e.target.checked\n        });\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.onSubmit = async () => {\n      const response = await this.props.mutate({\n        variables: this.state\n      });\n      console.log(response);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: e => this.onChange(e),\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: e => this.onChange(e),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => this.onChange(e),\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \" \", React.createElement(Checkbox, {\n      name: \"isAdmin\",\n      checked: this.state.isAdmin,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Admin ?\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.onSubmit(),\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Primary \"));\n  }\n\n}\n\nconst mutation = gql(_templateObject());\nexport default graphql(mutation)(Register);","map":{"version":3,"sources":["D:\\Programowanie\\CodersCamp\\dwana10\\2na10\\my-app\\src\\modules\\panels\\registration.js"],"names":["React","Button","Input","Checkbox","gql","graphql","Register","Component","state","username","email","password","isAdmin","onChange","e","target","name","setState","checked","value","onSubmit","response","props","mutate","variables","console","log","render","mutation"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,QAHJ,QAIO,MAJP;AAKA,SACIC,GADJ,EAEIC,OAFJ,QAGO,cAHP;;AAKA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAD2B;;AAAA,SAQnCC,QARmC,GAQvBC,CAAD,IAAO;AACd,UAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,SAAtB,EAAiC;AAC7B,aAAKC,QAAL,CAAc;AACV,WAACH,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AADhB,SAAd;AAGH,OAJD,MAIO;AACH,aAAKD,QAAL,CAAc;AACV,WAACH,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASI;AADhB,SAAd;AAGH;AACJ,KAlBkC;;AAAA,SAoBnCC,QApBmC,GAoBxB,YAAY;AACnB,YAAMC,QAAQ,GAAG,MAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkB;AACrCC,QAAAA,SAAS,EAAE,KAAKhB;AADqB,OAAlB,CAAvB;AAGAiB,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,KAzBkC;AAAA;;AA2BnCM,EAAAA,MAAM,GAAG;AACL,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,UAAd;AACA,MAAA,WAAW,EAAG,UADd;AAEA,MAAA,QAAQ,EACJb,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAHT;AAKA,MAAA,KAAK,EACD,KAAKN,KAAL,CAAWC,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,OASF,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,OAAd;AACH,MAAA,WAAW,EAAG,OADX;AAEH,MAAA,QAAQ,EACJK,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAHN;AAKH,MAAA,KAAK,EACD,KAAKN,KAAL,CAAWE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATE,OAiBF,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,UAAd;AACH,MAAA,WAAW,EAAG,UADX;AAEH,MAAA,IAAI,EAAG,UAFJ;AAGH,MAAA,QAAQ,EACJI,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAJN;AAMH,MAAA,KAAK,EACD,KAAKN,KAAL,CAAWG,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBE,OA0BF,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAG,SAAjB;AACH,MAAA,OAAO,EACH,KAAKH,KAAL,CAAWI,OAFZ;AAIH,MAAA,QAAQ,EACJE,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BE,OAkCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCP,EAmCL,oBAAC,MAAD;AAAQ,MAAA,OAAO,EACX,MAAM,KAAKM,QAAL,EADV;AAGA,MAAA,IAAI,EAAG,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnCK,CAAT;AAyCH;;AArEkC;;AAwEvC,MAAMQ,QAAQ,GAAGxB,GAAH,mBAAd;AAQA,eAAeC,OAAO,CAACuB,QAAD,CAAP,CAAkBtB,QAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    Button,\r\n    Input,\r\n    Checkbox\r\n} from 'antd';\r\nimport {\r\n    gql,\r\n    graphql\r\n} from 'react-apollo';\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        isAdmin: false,\r\n    }\r\n\r\n    onChange = (e) => {\r\n        if (e.target.name === 'isAdmin') {\r\n            this.setState({\r\n                [e.target.name]: e.target.checked,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit = async () => {\r\n        const response = await this.props.mutate({\r\n            variables: this.state,\r\n        });\r\n        console.log(response);\r\n    }\r\n\r\n    render() {\r\n        return ( <div>\r\n            <Input name = 'username'\r\n            placeholder = 'Username'\r\n            onChange = {\r\n                e => this.onChange(e)\r\n            }\r\n            value = {\r\n                this.state.username\r\n            }\r\n            /> <Input name = 'email'\r\n            placeholder = 'Email'\r\n            onChange = {\r\n                e => this.onChange(e)\r\n            }\r\n            value = {\r\n                this.state.email\r\n            }\r\n            /> <Input name = 'password'\r\n            placeholder = 'Password'\r\n            type = 'password'\r\n            onChange = {\r\n                e => this.onChange(e)\r\n            }\r\n            value = {\r\n                this.state.password\r\n            }\r\n            /> <Checkbox name = 'isAdmin'\r\n            checked = {\r\n                this.state.isAdmin\r\n            }\r\n            onChange = {\r\n                e => this.onChange(e)\r\n            }>\r\n            Admin ?\r\n            </Checkbox> <br/>\r\n            <Button onClick = {\r\n                () => this.onSubmit()\r\n            }\r\n            type = \"primary\" > Primary </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mutation = gql `\r\nmutation($username: String!, $email: String!, $password: String!, $isAdmin: Boolean) {\r\n\tregister(username: $username, email: $email, password: $password, isAdmin: $isAdmin) {\r\n\t  id\r\n\t}\r\n}\r\n`;\r\n\r\nexport default graphql(mutation)(Register);"]},"metadata":{},"sourceType":"module"}
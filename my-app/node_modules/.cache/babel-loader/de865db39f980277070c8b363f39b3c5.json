{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { bsClass, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  /**\r\n   * An html id attribute, necessary for accessibility\r\n   * @type {string}\r\n   * @required\r\n   */\n  id: isRequiredForA11y(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n\n  /**\r\n   * Sets the direction the Popover is positioned towards.\r\n   */\n  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /**\r\n   * The \"top\" position value for the Popover.\r\n   */\n  positionTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The \"left\" position value for the Popover.\r\n   */\n  positionLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The \"top\" position value for the Popover arrow.\r\n   */\n  arrowOffsetTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The \"left\" position value for the Popover arrow.\r\n   */\n  arrowOffsetLeft: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * Title content\r\n   */\n  title: PropTypes.node\n};\nvar defaultProps = {\n  placement: 'right'\n};\n\nvar Popover = function (_React$Component) {\n  _inherits(Popover, _React$Component);\n\n  function Popover() {\n    _classCallCheck(this, Popover);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Popover.prototype.render = function render() {\n    var _extends2;\n\n    var _props = this.props,\n        placement = _props.placement,\n        positionTop = _props.positionTop,\n        positionLeft = _props.positionLeft,\n        arrowOffsetTop = _props.arrowOffsetTop,\n        arrowOffsetLeft = _props.arrowOffsetLeft,\n        title = _props.title,\n        className = _props.className,\n        style = _props.style,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, ['placement', 'positionTop', 'positionLeft', 'arrowOffsetTop', 'arrowOffsetLeft', 'title', 'className', 'style', 'children']);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = _extends({}, getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));\n\n    var outerStyle = _extends({\n      display: 'block',\n      top: positionTop,\n      left: positionLeft\n    }, style);\n\n    var arrowStyle = {\n      top: arrowOffsetTop,\n      left: arrowOffsetLeft\n    };\n    return React.createElement('div', _extends({}, elementProps, {\n      role: 'tooltip',\n      className: classNames(className, classes),\n      style: outerStyle\n    }), React.createElement('div', {\n      className: 'arrow',\n      style: arrowStyle\n    }), title && React.createElement('h3', {\n      className: prefix(bsProps, 'title')\n    }, title), React.createElement('div', {\n      className: prefix(bsProps, 'content')\n    }, children));\n  };\n\n  return Popover;\n}(React.Component);\n\nPopover.propTypes = propTypes;\nPopover.defaultProps = defaultProps;\nexport default bsClass('popover', Popover);","map":null,"metadata":{},"sourceType":"module"}
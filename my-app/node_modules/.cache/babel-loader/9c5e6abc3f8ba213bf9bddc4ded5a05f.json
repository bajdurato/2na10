{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bajdu\\\\Documents\\\\2na10\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\bajdu\\\\Documents\\\\2na10\\\\my-app\\\\src\\\\modules\\\\movie-browser\\\\movie-browser.container.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport { AppBar, TextField, RaisedButton } from 'material-ui';\nimport * as movieActions from './movie-browser.actions';\nimport * as movieHelpers from './movie-browser.helpers';\nimport MovieList from './movie-list/movie-list.component';\nimport * as scrollHelpers from '../common/scroll.helpers';\nimport MovieModal from './movie-modal/movie-modal.container';\n\nclass MovieBrowser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      currentMovies: []\n    }; // Binds the handleScroll to this class (MovieBrowser)\n    // which provides access to MovieBrowser's props\n    // Note: You don't have to do this if you call a method\n    // directly from a lifecycle method\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    window.onscroll = this.handleScroll;\n    this.props.getTopMovies(this.state.currentPage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll() {\n    const topMovies = this.props.topMovies;\n\n    if (!topMovies.isLoading) {\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\n\n      if (percentageScrolled > .8) {\n        const nextPage = this.state.currentPage + 1;\n        this.props.getTopMovies(nextPage);\n        this.setState({\n          currentPage: nextPage\n        });\n      }\n    }\n  }\n\n  render() {\n    const topMovies = this.props.topMovies;\n    const movies = movieHelpers.getMoviesList(topMovies.response);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      title: \"Movie Browser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Search will go here \")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(MovieList, {\n      movies: movies,\n      isLoading: topMovies.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), \" \", React.createElement(MovieModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect( // Map nodes in our state to a properties of our component\nstate => ({\n  topMovies: state.movieBrowser.topMovies\n}), // Map action creators to properties of our component\n_objectSpread({}, movieActions))(MovieBrowser);","map":{"version":3,"sources":["C:\\Users\\bajdu\\Documents\\2na10\\my-app\\src\\modules\\movie-browser\\movie-browser.container.js"],"names":["React","connect","Grid","Row","Col","AppBar","TextField","RaisedButton","movieActions","movieHelpers","MovieList","scrollHelpers","MovieModal","MovieBrowser","Component","constructor","props","state","currentPage","currentMovies","handleScroll","bind","componentDidMount","window","onscroll","getTopMovies","componentWillUnmount","removeEventListener","topMovies","isLoading","percentageScrolled","getPercentageScrolledDown","nextPage","setState","render","movies","getMoviesList","response","movieBrowser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,QAEO,aAFP;AAGA,SACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,QAIO,iBAJP;AAKA,SACEC,MADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,aAJP;AAKA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,0BAA/B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,YAAN,SAA2Bb,KAAK,CAACc,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb,CAFiB,CAMjB;AACA;AACA;AACA;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,QAAP,GAAkB,KAAKJ,YAAvB;AACA,SAAKJ,KAAL,CAAWS,YAAX,CAAwB,KAAKR,KAAL,CAAWC,WAAnC;AACD;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKP,YAA1C;AACD;;AAEDA,EAAAA,YAAY,GAAG;AAAA,UAEXQ,SAFW,GAGT,KAAKZ,KAHI,CAEXY,SAFW;;AAIb,QAAI,CAACA,SAAS,CAACC,SAAf,EAA0B;AACxB,UAAIC,kBAAkB,GAAGnB,aAAa,CAACoB,yBAAd,CAAwCR,MAAxC,CAAzB;;AACA,UAAIO,kBAAkB,GAAG,EAAzB,EAA6B;AAC3B,cAAME,QAAQ,GAAG,KAAKf,KAAL,CAAWC,WAAX,GAAyB,CAA1C;AACA,aAAKF,KAAL,CAAWS,YAAX,CAAwBO,QAAxB;AACA,aAAKC,QAAL,CAAc;AACZf,UAAAA,WAAW,EAAEc;AADD,SAAd;AAGD;AACF;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UAELN,SAFK,GAGH,KAAKZ,KAHF,CAELY,SAFK;AAIP,UAAMO,MAAM,GAAG1B,YAAY,CAAC2B,aAAb,CAA2BR,SAAS,CAACS,QAArC,CAAf;AAEA,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,EAEP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,CADA,EAIA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAIF,MAArB;AAA6B,MAAA,SAAS,EAAEP,SAAS,CAACC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJA,CAFO,OAQO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARP,CAAT;AAWD;;AAxDwC;;AA2D3C,eAAe5B,OAAO,EACpB;AACCgB,KAAD,KAAY;AACVW,EAAAA,SAAS,EAAEX,KAAK,CAACqB,YAAN,CAAmBV;AADpB,CAAZ,CAFoB,EAKpB;AALoB,kBAOfpB,YAPe,EAAP,CASbK,YATa,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  connect\r\n} from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap';\r\nimport {\r\n  AppBar,\r\n  TextField,\r\n  RaisedButton\r\n} from 'material-ui';\r\nimport * as movieActions from './movie-browser.actions';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieModal from './movie-modal/movie-modal.container';\r\n\r\nclass MovieBrowser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      currentMovies: []\r\n    };\r\n    // Binds the handleScroll to this class (MovieBrowser)\r\n    // which provides access to MovieBrowser's props\r\n    // Note: You don't have to do this if you call a method\r\n    // directly from a lifecycle method\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onscroll = this.handleScroll;\r\n    this.props.getTopMovies(this.state.currentPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    const {\r\n      topMovies\r\n    } = this.props;\r\n    if (!topMovies.isLoading) {\r\n      let percentageScrolled = scrollHelpers.getPercentageScrolledDown(window);\r\n      if (percentageScrolled > .8) {\r\n        const nextPage = this.state.currentPage + 1;\r\n        this.props.getTopMovies(nextPage);\r\n        this.setState({\r\n          currentPage: nextPage\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      topMovies\r\n    } = this.props;\r\n    const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n    return ( <div>\r\n      <AppBar title = 'Movie Browser'/>\r\n      <Grid>\r\n      <Row>\r\n      <p>Search will go here </p> \r\n      </Row>\r\n      <Row>\r\n      <MovieList movies = {movies} isLoading={topMovies.isLoading}/> \r\n      </Row></Grid> <MovieModal/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  (state) => ({\r\n    topMovies: state.movieBrowser.topMovies\r\n  }),\r\n  // Map action creators to properties of our component\r\n  {\r\n    ...movieActions\r\n  }\r\n)(MovieBrowser);"]},"metadata":{},"sourceType":"module"}